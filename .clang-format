---
UseTab: Never
IndentWidth: 4
ColumnLimit: 80
BasedOnStyle: LLVM
---

---
Language: Cpp

# c syle
SortIncludes: Never                       # off: sort headers
IndentGotoLabels: false                   # off: lable indent
SpaceInEmptyBlock: true                   # on: space in empty block { }
PointerAlignment: Right                   # on: pointer is not a part of type int *n
BitFieldColonSpacing: Both                # on: space betwen bit field declaration
SpaceAfterCStyleCast: false               # off: space after c-style cast (int*)ptr
IndentPPDirectives: AfterHash             # on: preprocessor directive

# alignment
AlignEscapedNewlines: Right               # align escaped new lines: \
AlignAfterOpenBracket: Align              # align after open bracket: ()
AlignArrayOfStructures: Right             # align array of structures

AlignTrailingComments:                    # align trailing comments
  Kind: Always
  OverEmptyLines: 1

AlignConsecutiveBitFields:                # align consecutive bit fields
  Enabled: true
  AcrossComments: true
  AcrossEmptyLines: false

AlignConsecutiveMacros:                   # align consecutive macros
  Enabled: true
  AcrossComments: true
  AcrossEmptyLines: false

# single line
BinPackArguments: true                          # on: bin pack args
BinPackParameters: true                         # on: bin pack parms

AllowShortEnumsOnASingleLine: true              # on: short enum decl in a single line
AllowShortBlocksOnASingleLine: Empty            # on: only allow empty block in a sinle line
AllowShortLoopsOnASingleLine: false             # off: short loop statement in a single line
AllowShortFunctionsOnASingleLine: None          # off: short func definition in a single line 
AllowShortIfStatementsOnASingleLine: Never      # off: short if statement in a single line

AllowAllArgumentsOnNextLine: true               # on: args of func call on the next line
AllowAllParametersOfDeclarationOnNextLine: true # on: parms of func decl on the next line

# break newline
BreakStringLiterals: true                       # on: break string literals "a" "b"
BreakBeforeBinaryOperators: All                 # on: break binary operators
BreakBeforeTernaryOperators: true               # on: break ternary operators

AlwaysBreakBeforeMultilineStrings: false
AlwaysBreakAfterReturnType: AllDefinitions

# braces wrap
BraceWrapping:
  AfterEnum: true
  AfterUnion: true
  AfterStruct: true
  AfterFunction: true
  SplitEmptyRecord: true
  SplitEmptyFunction: true
  BeforeElse: false
  BeforeWhile: false
  AfterCaseLabel: false
  AfterControlStatement: MultiLine
BreakBeforeBraces: Custom
---
